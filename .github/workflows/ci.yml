name: Automatic Deployment
on:
  push:
    branches:
      - main
      - staging
jobs:
  environment:
    name: Configure Environment
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.prod.outputs.target || steps.staging.outputs.target }}
      api_base_url: ${{ steps.prod.outputs.api_base_url || steps.staging.outputs.api_base_url }}
      project_name: ${{ steps.prod.outputs.project_name || steps.staging.outputs.project_name }}
      port: ${{ steps.prod.outputs.port  || steps.staging.outputs.port }}
      external_port: ${{ steps.prod.outputs.external_port  || steps.staging.outputs.external_port }}
    steps:
      - name: Set Production Environment
        id: prod
        if: ${{ github.ref_name == 'main'}}
        run: |
          echo "target=production" >> $GITHUB_OUTPUT
          echo "api_base_url=${{ vars.NUXT_API_URL }}" >> $GITHUB_OUTPUT
          echo "project_name=omp-client" >> $GITHUB_OUTPUT
          echo "port=3000" >> $GITHUB_OUTPUT
          echo "external_port=80" >> $GITHUB_OUTPUT
      - name: Set Staging Environment
        id: staging
        if: ${{github.ref_name == 'staging'}}
        run: |
          echo "target=staging" >> $GITHUB_OUTPUT
          echo "api_base_url=${{ vars.NUXT_API_URL }}" >> $GITHUB_OUTPUT
          echo "project_name=omp-client-staging" >> $GITHUB_OUTPUT
          echo "port=3001" >> $GITHUB_OUTPUT
          echo "external_port=${{ secrets.CLIENT_STAGING_EXTERNAL_PORT }}" >> $GITHUB_OUTPUT

  build:
    name: CI Build
    needs: [environment]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NUXT_API_URL="${{ needs.environment.outputs.api_base_url }}:${{ needs.environment.outputs.port }}"
          context: .
          push: true
          tags: |
            abulhuman/omp-client:${{ needs.environment.outputs.target }}
            abulhuman/omp-client:latest
          cache-from: type=registry,ref=abulhuman/omp-client:${{ needs.environment.outputs.target }}-buildcache
          cache-to: type=registry,ref=abulhuman/omp-client:${{ needs.environment.outputs.target }}-buildcache,mode=max
          target: ${{ needs.environment.outputs.target }}

  deploy:
    name: Continuous Deployment
    needs: [build, environment]
    runs-on: self-hosted
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Pull built image ðŸ§²
        run: |
          docker pull abulhuman/omp-client:${{ needs.environment.outputs.target }}

      - name: $ Deploying to ${{ needs.environment.outputs.target }}
        run: PORT=${{ needs.environment.outputs.external_port }} IMAGE_TAG=${{ needs.environment.outputs.target }} docker compose --project-name="${{ needs.environment.outputs.project_name }}" up -d
